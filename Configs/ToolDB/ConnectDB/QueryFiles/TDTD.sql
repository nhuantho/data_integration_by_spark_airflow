--HĐ thành công--
(
SELECT
	WLSWF .LOAN_CODE ,
	WLSWF .INTEGRATION_ID ,
	WLSWF .CREATED_DT ,
	WLSWF ."ACTION" ,
	g.GRP_NM Status,
	g2.GRP_NM Status_dtl,
	NULL Cancel_reason,
	NULL Reject_reason,
	NULL Request_reason,
	NULL Reason_detail,
	CAST(c.SHOP_CURRENT_WID AS varchar(30)) SHOP_CODE,
	c.SHOP_NAME ,
	c.CALLER_CODE,
	c.CALLER_NAME,
	wed.EMPLOYEE_CODE ,
	wed.EMPLOYEE_NM,
	c.CAMPAIGN,
	c.NHOM_NGUON,
	c.NGUON_PHU,
	c.PHAN_LOAI_NGUON_PHU,
    c.DISBURSE_DT,
	c.MONEY
FROM F88DWH.W_LOAN_STATE_WORKFLOW_F wlswf
INNER JOIN (SELECT LOAN_CODE  FROM F88DWH.W_LOAN_DTL_F WHERE CHANNEL_CODE LIKE '%E2E%' AND CREATED_DT >= to_Date(:day1,'yyyy-mm-dd')) ldt ON WLSWF .LOAN_CODE = ldt.LOAN_CODE
INNER JOIN --Lấy theo trạng thái cuối cùng
			(SELECT  LOAN_CODE, max(INTEGRATION_ID) max_id
			FROM  f88dwh.w_loan_state_workflow_f
			WHERE  EMPLOYEE_WID_UPDATE IS NOT null
			AND TO_DATE(CREATED_DT) >= to_Date(:day1,'yyyy-mm-dd') GROUP BY LOAN_CODE) m on wlswf.LOAN_CODE = m.LOAN_CODE and wlswf.INTEGRATION_ID = m.max_id
LEFT JOIN F88DWH.W_SHOP_D wsd ON WLSWF .SHOP_WID = wsd.SHOP_WID
LEFT JOIN F88DWH.W_EMPLOYEE_D wed ON WLSWF .EMPLOYEE_WID_UPDATE = wed.EMPLOYEE_WID
LEFT JOIN F88DWH.GRP g ON WLSWF .WORK_FLOW_STATUS_WID = g.GRP_ID
LEFT JOIN F88DWH.GRP g2 ON WLSWF .STATE_WORK_FLOW_WID = g2.GRP_ID
LEFT JOIN --Lấy tên TLS
			(SELECT * FROM F88DWH.W_PAWN_ONLINE_TLS_F wpotf WHERE DISBURSE_DT >= to_Date(:day1,'yyyy-mm-dd')) c ON WLSWF .LOAN_CODE = c.CONTRACT_NO
WHERE TO_DATE(wlswf.CREATED_DT) >= to_Date(:day1,'yyyy-mm-dd')
	AND wlswf.EMPLOYEE_WID_UPDATE IS NOT NULL
	AND WLSWF. LOAN_WID IS NOT NULL
	)
UNION --HĐ chưa thành công--
(
SELECT
	WLSWF .LOAN_CODE ,
	WLSWF .INTEGRATION_ID ,
	WLSWF .CREATED_DT ,
	WLSWF ."ACTION" ,
	g.GRP_NM Status,
	g2.GRP_NM Status_dtl,
	wrcd.NAME Cancel_reason,
	wrrd.NAME Reject_reason,
	wrrd2.REASON_REQUEST_NM  Request_reason,
	WLSWF .REASON Reason_detail,
	wsd.SHOP_CODE,
	wsd.SHOP_NM ,
	c.TLS_USER,
	c.TLS_NAME,
	wed.EMPLOYEE_CODE ,
	wed.EMPLOYEE_NM ,
	NULL ,NULL ,NULL ,NULL ,NULL, NULL
FROM F88DWH.W_LOAN_STATE_WORKFLOW_F wlswf
INNER JOIN --Lấy theo trạng thái cuối cùng
			(SELECT  LOAN_CODE, max(INTEGRATION_ID) max_id
			FROM  f88dwh.w_loan_state_workflow_f
			WHERE  EMPLOYEE_WID_UPDATE IS NOT null
			AND TO_DATE(CREATED_DT) >= to_Date(:day1,'yyyy-mm-dd') GROUP BY LOAN_CODE) m on wlswf.LOAN_CODE = m.LOAN_CODE and wlswf.INTEGRATION_ID = m.max_id
LEFT JOIN F88DWH.W_SHOP_D wsd ON WLSWF .SHOP_WID = wsd.SHOP_WID
LEFT JOIN F88DWH.W_EMPLOYEE_D wed ON WLSWF .EMPLOYEE_WID_UPDATE = wed.EMPLOYEE_WID
LEFT JOIN F88DWH.GRP g ON WLSWF .WORK_FLOW_STATUS_WID = g.GRP_ID
LEFT JOIN F88DWH.GRP g2 ON WLSWF .STATE_WORK_FLOW_WID = g2.GRP_ID
LEFT JOIN --Đi tìm lý do
			(SELECT wlrf2.STATE_WORKFLOW_ID , wlrf2.REASON_REQUEST_WID , wlrf2.REASON_REJECT_WID , wlrf2.REASON_CANCEL_WID
			FROM F88DWH.W_LOAN_REASON_F wlrf2
			INNER JOIN (SELECT STATE_WORKFLOW_ID , MAX(INTEGRATION_ID) max_id2  FROM F88DWH.W_LOAN_REASON_F GROUP BY STATE_WORKFLOW_ID) a ON WLRF2 .STATE_WORKFLOW_ID = a.STATE_WORKFLOW_ID AND WLRF2 .INTEGRATION_ID = a.max_id2
			WHERE wlrf2.CREATED_DT >= to_Date(:day1,'yyyy-mm-dd')) b ON WLSWF .INTEGRATION_ID = b.STATE_WORKFLOW_ID
			LEFT JOIN F88DWH.W_REASON_CANCEL_D wrcd ON b .REASON_CANCEL_WID = wrcd.REASON_CANCEL_WID
			LEFT JOIN F88DWH.W_REASON_REJECT_D wrrd ON b .REASON_REJECT_WID = wrrd.REASON_REJECT_WID
			LEFT JOIN F88DWH.W_REASON_REQUEST_D wrrd2 ON b .REASON_REQUEST_WID = wrrd2.REASON_REQUEST_WID
LEFT JOIN --Lấy tên TLS
			(SELECT WLSWF3.LOAN_CODE , wed1.EMPLOYEE_CODE TLS_USER, wed1.EMPLOYEE_NM TLS_NAME, wed1.DEPARTMENT_NM
			FROM F88DWH.W_LOAN_STATE_WORKFLOW_F wlswf3
			LEFT JOIN F88DWH.W_EMPLOYEE_D wed1 ON WLSWF3.EMPLOYEE_WID_UPDATE = wed1.EMPLOYEE_WID
			WHERE WLSWF3. "ACTION" = 'save' AND WLSWF3 .CREATED_DT >= to_Date(:day1,'yyyy-mm-dd')) c ON WLSWF .LOAN_CODE = c.LOAN_CODE
WHERE TO_DATE(wlswf.CREATED_DT) >= to_Date(:day1,'yyyy-mm-dd')
	AND wlswf.EMPLOYEE_WID_UPDATE IS NOT NULL
	AND WLSWF. LOAN_WID IS NULL
	AND lower(wsd.SHOP_NM) LIKE '%tele%'
	)
UNION --Request ko có shop_name
(
SELECT
	WLSWF .LOAN_CODE ,
	WLSWF .INTEGRATION_ID ,
	WLSWF .CREATED_DT ,
	WLSWF ."ACTION" ,
	g.GRP_NM Status,
	g2.GRP_NM Status_dtl,
	wrcd.NAME Cancel_reason,
	wrrd.NAME Reject_reason,
	wrrd2.REASON_REQUEST_NM  Request_reason,
	WLSWF .REASON Reason_detail,
	wsd.SHOP_CODE,
	wsd.SHOP_NM ,
	c.TLS_USER,
	c.TLS_NAME,
	wed.EMPLOYEE_CODE ,
	wed.EMPLOYEE_NM,
    NULL ,NULL ,NULL ,NULL ,NULL, NULL
FROM F88DWH.W_LOAN_STATE_WORKFLOW_F wlswf
INNER JOIN --Lấy theo trạng thái cuối cùng
			(SELECT  LOAN_CODE, max(INTEGRATION_ID) max_id
			FROM  f88dwh.w_loan_state_workflow_f
			WHERE  EMPLOYEE_WID_UPDATE IS NOT null
			AND TO_DATE(CREATED_DT) >= to_Date(:day1,'yyyy-mm-dd') GROUP BY LOAN_CODE) m on wlswf.LOAN_CODE = m.LOAN_CODE and wlswf.INTEGRATION_ID = m.max_id
INNER JOIN --Lấy tên TLS
			(SELECT WLSWF3.LOAN_CODE , wed1.EMPLOYEE_CODE TLS_USER, wed1.EMPLOYEE_NM TLS_NAME
			FROM F88DWH.W_LOAN_STATE_WORKFLOW_F wlswf3
			LEFT JOIN F88DWH.W_EMPLOYEE_D wed1 ON WLSWF3.EMPLOYEE_WID_UPDATE = wed1.EMPLOYEE_WID
			WHERE WLSWF3. "ACTION" = 'save' AND WLSWF3 .CREATED_DT >= to_Date(:day1,'yyyy-mm-dd') AND lower(wed1.DEPARTMENT_NM) LIKE '%bán hàng qua điện thoại%') c ON WLSWF .LOAN_CODE = c.LOAN_CODE
LEFT JOIN F88DWH.W_SHOP_D wsd ON WLSWF .SHOP_WID = wsd.SHOP_WID
LEFT JOIN F88DWH.W_EMPLOYEE_D wed ON WLSWF .EMPLOYEE_WID_UPDATE = wed.EMPLOYEE_WID
LEFT JOIN F88DWH.GRP g ON WLSWF .WORK_FLOW_STATUS_WID = g.GRP_ID
LEFT JOIN F88DWH.GRP g2 ON WLSWF .STATE_WORK_FLOW_WID = g2.GRP_ID
LEFT JOIN --Đi tìm lý do
			(SELECT wlrf2.STATE_WORKFLOW_ID , wlrf2.REASON_REQUEST_WID , wlrf2.REASON_REJECT_WID , wlrf2.REASON_CANCEL_WID
			FROM F88DWH.W_LOAN_REASON_F wlrf2
			INNER JOIN (SELECT STATE_WORKFLOW_ID , MAX(INTEGRATION_ID) max_id2  FROM F88DWH.W_LOAN_REASON_F GROUP BY STATE_WORKFLOW_ID) a ON WLRF2 .STATE_WORKFLOW_ID = a.STATE_WORKFLOW_ID AND WLRF2 .INTEGRATION_ID = a.max_id2
			WHERE wlrf2.CREATED_DT >= to_Date(:day1,'yyyy-mm-dd')) b ON WLSWF .INTEGRATION_ID = b.STATE_WORKFLOW_ID
			LEFT JOIN F88DWH.W_REASON_CANCEL_D wrcd ON b .REASON_CANCEL_WID = wrcd.REASON_CANCEL_WID
			LEFT JOIN F88DWH.W_REASON_REJECT_D wrrd ON b .REASON_REJECT_WID = wrrd.REASON_REJECT_WID
			LEFT JOIN F88DWH.W_REASON_REQUEST_D wrrd2 ON b .REASON_REQUEST_WID = wrrd2.REASON_REQUEST_WID
WHERE TO_DATE(wlswf.CREATED_DT) >= to_Date(:day1,'yyyy-mm-dd')
	AND wlswf.EMPLOYEE_WID_UPDATE IS NOT NULL
	AND WLSWF. LOAN_WID IS NULL
	AND WLSWF .SHOP_WID IS NULL
)